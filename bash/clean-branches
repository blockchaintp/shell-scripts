#!/usr/bin/env bash

# shellcheck disable=SC1090
source "$(dirname "$0")/include.sh"

addCliOptions
options::set_description "Cleans the target directory of branches which have \
  lost their remote counterparts."
options::add -o d -d "target directory" -a -e TARGET_DIR
options::parse "$@"

# globals
TARGET_DIR="${TARGET_DIR:-$(pwd)}"

if [ ! -d "$TARGET_DIR/.git" ]; then
  error_exit "$TARGET_DIR is not the root of a git repository"
fi

cd "$TARGET_DIR" || error_exit "Failed to cd to $TARGET_DIR, check permissions"

log::info "Fetching for repository $TARGET_DIR"
exec::capture git fetch -p
log::info "Checking for branches without remotes"
for name in $(git branch -vv | grep -v '^\*' | grep -v "\[.*]" | awk '{print $1}'); do
  log::info "Branch $name has no remote, deleting"
  exec::capture git branch -D "$name"
done

log::info "Checking for branches where the remote has been deleted"
for branch in $(git branch -vv | grep ': gone]' | grep -v "\*" | awk '{ print $1; }'); do
  log::info "Deleting $branch"
  exec::capture git branch -D "$branch"
done

log::info "Checking for old build tags"
for tag in $(git tag -l | grep build/); do
  log::info "Deleting tag $tag"
  exec::capture git push --delete origin "$tag"
  exec::capture git tag -d "$tag"
done
