#!/usr/bin/env bash
# Copyright Â© 2023 Paravela Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http:#www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------------

# shellcheck source=includer.sh
source "$(dirname "${BASH_SOURCE[0]}")/includer.sh"

@include git
@include options

options::standard
options::description "Find consecutive commits against the same file set and\
  list them"
options::add -o s -d "start from" -a -m -e START_FROM
options::add -o e -d "end at" -a -e END_AT
options::parse "$@"

previous_cmt=
previous_files=
first_squash="true"
for cmt in $(git::commits "$START_FROM" "$END_AT"); do
  if [ -n "$previous_cmt" ]; then
    these_files=$(git::files_changed "$cmt" | cksum)
    if [ "$these_files" = "$previous_files" ]; then
      if [ "$first_squash" = "true" ]; then
        first_squash=$previous_cmt
      fi
    else
      if [ "$first_squash" != "true" ]; then
        echo
        echo "$first_squash" to "$previous_cmt" could be squashed
        git::log_fromto "${previous_cmt}~1" "$first_squash"
        echo
        git::files_changed "$previous_cmt"
      fi
      first_squash="true"
    fi
  fi
  previous_cmt=$cmt
  previous_files=$(git::files_changed "$cmt" | cksum)
done
