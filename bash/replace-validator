#!/bin/bash

# shellcheck disable=SC1090
source "$(dirname "$0")/include.sh"

addCliOptions
options::description "Migrate the keys from one validator to another."
options::add -o f -d "node to migrate from" -a -m -e FROM_NODE
options::add -o t -d "node to migrate to" -a -m -e TRGT_NODE
options::add -o l -d "label of the sawtooth" -a -m -e LABEL
options::parse "$@"

declare -A node2pod
declare -A pod2node

function getPodsForLabel() {
  local label=${1:?}
  kubectl get pods -l "$label" -o name | awk -F/ '{print $2}'
}

function getNodeForPod() {
  local pod=${1:?}
  kubectl get "pod/${pod}" -o json | jq -r '.spec.nodeName'
}

function mapPods() {
  local _label=${1:?}
  INFO "mapping pods to nodes for label $_label"
  for p in $(getPodsForLabel "${_label:?}"); do
    node=$(getNodeForPod "${p}")
    node2pod[$node]=$p
    # shellcheck disable=SC2034
    pod2node[$p]=$node
  done
}

TEMP_DIR=$(mktemp -d)
INFO "using temporary directory $TEMP_DIR"
function getKeys() {
  local pod=${1:?}
  INFO "fetching keys from $pod"
  mkdir -p "$TEMP_DIR/$pod"
  kubectl cp "$pod:etc/sawtooth/keys" "$TEMP_DIR/$pod" -c validator
}

function pushKeys() {
  local from_pod=${1:?}
  local to_pod=${2:?}
  INFO "push keys to $to_pod"
  if [ -d "$TEMP_DIR/$from_pod" ]; then
    kubectl cp "$TEMP_DIR/$from_pod/validator.priv" "$to_pod:etc/sawtooth/keys/" \
      -c validator &&
      kubectl cp "$TEMP_DIR/$from_pod/validator.pub" "$to_pod:etc/sawtooth/keys/" \
        -c validator
    return $?
  else
    ERROR "Source keys don't exist at dir $TEMP_DIR/$from_pod"
    return 1
  fi
}

function unlabelNode() {
  local node=${1:?}
  local label=${2:?}
  INFO "Removing label $label from node $node"
  local neg_label
  neg_label="${label//=*/}-"
  kubectl label node "$node" "$neg_label"
}

function labelNode() {
  node=${1:?}
  label=${2:?}
  INFO "Removing label $label from node $node"
  kubectl label node "$node" "$label"
}

function waitForPodTermination() {
  local pod=${1:?}
  INFO "Waiting for pod $pod to terminate"
  while kubectl get pod "$pod" -o name >/dev/null 2>&1; do
    sleep 5
    INFO "Waiting for pod $pod to terminate"
  done
}

function main() {
  # shellcheck disable=SC2153
  mapPods "$LABEL"
  from_pod=${node2pod[$FROM_NODE]}
  to_pod=${node2pod[$TRGT_NODE]}

  getKeys "$from_pod"
  getKeys "$to_pod"
  pushKeys "$from_pod" "$to_pod"
  unlabelNode "$FROM_NODE" "$LABEL"
  waitForPodTermination "$from_pod"
  unlabelNode "$TRGT_NODE" "$LABEL"
  waitForPodTermination "$to_pod"
  labelNode "$TRGT_NODE" "$LABEL"

}

main
