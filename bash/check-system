#!/usr/bin/env bash
# shellcheck disable=SC1090
source "$(dirname "${BASH_SOURCE[0]}")/includer.sh"

@include commands
@include error
@include log
@include options

options::standard
options::set_description "Checks either the local system or a list of ssh \
  targets for their system BIOS version and SGX driver."
options::add -o u -d "use sudo" -x USE_SUDO
options::add -o s -d "use ssh" -x USE_SSH
options::add -o l -d "run locally" -x RUN_LOCALLY
options::parse "$@"
shift $((OPTIND - 1))

_dmidecode=(/sbin/dmidecode)
_lsmod=(/sbin/lsmod)
_driver=(modinfo isgx --field=srcversion)

vendor_cmd=("${_dmidecode[@]}" -s bios-vendor)
version_cmd=("${_dmidecode[@]}" -s bios-version)
release_cmd=("${_dmidecode[@]}" -s bios-release-date)
lsmod_cmd=("${_lsmod[@]}")
driver_cmd=("${_driver[@]}")

if [ "$USE_SSH" != "true" ]; then
  _cmd_prefix=()
  if [ "$USE_SUDO" = "true" ]; then
    _cmd_prefix=(sudo -S)
  fi

  log::debug "${_cmd_prefix[*]} ${vendor_cmd[*]}"
  vendor=$("${_cmd_prefix[@]}" "${vendor_cmd[@]}") ||
    error::exit "Failed to execute bios-vendor command"
  log::debug "${_cmd_prefix[*]} ${version_cmd[*]}"
  version=$("${_cmd_prefix[@]}" "${version_cmd[@]}") ||
    error::exit "Failed to execute bios-version command"
  log::debug "${_cmd_prefix[*]} ${release_cmd[*]}"
  release=$("${_cmd_prefix[@]}" "${release_cmd[@]}") ||
    error::exit "Failed to execute bios-release-date command"
  log::debug "${_cmd_prefix[*]} ${lsmod_cmd[*]}"
  mod_list=$("${_cmd_prefix[@]}" "${lsmod_cmd[@]}") ||
    error::exit "Failed to execute lsmod command"

  if echo "$mod_list" | grep isgx; then
    log::debug "${driver_cmd[*]}"
    driver=$("${driver_cmd[@]}") || error::exit "Failed to execute driver command"
  else
    log::warn "No ISGX driver loaded on ${host}"
    driver="(none)"
  fi

  log::info "host=localhost bios vendor=${vendor} version=${version} release=${release} driver=${driver}"
else
  for host in "$@"; do
    _cmd_prefix=()
    _cmd_postfix=()
    _cmd_prefix=("$(commands::use ssh)" "$host")
    if [ "$USE_SUDO" = "true" ]; then
      _cmd_prefix+=(sudo -S bash -c \")
      _cmd_postfix=(\")
    fi

    log::debug "${_cmd_prefix[*]} ${vendor_cmd[*]} ${_cmd_postfix[*]}"
    vendor=$("${_cmd_prefix[@]}" "${vendor_cmd[@]}" "${_cmd_postfix[@]}") ||
      error::exit "Failed to execute bios-vendor command"
    log::debug "${_cmd_prefix[*]} ${version_cmd[*]} ${_cmd_postfix[*]}"
    version=$("${_cmd_prefix[@]}" "${version_cmd[@]}" "${_cmd_postfix[@]}") ||
      error::exit "Failed to execute bios-version command"
    log::debug "${_cmd_prefix[*]} ${release_cmd[*]} ${_cmd_postfix[*]}"
    release=$("${_cmd_prefix[@]}" "${release_cmd[@]}" "${_cmd_postfix[@]}") ||
      error::exit "Failed to execute bios-release-date command"
    log::debug "${_cmd_prefix[*]} ${lsmod_cmd[*]} ${_cmd_postfix[*]}"
    mod_list=$("${_cmd_prefix[@]}" "${lsmod_cmd[@]}" "${_cmd_postfix[@]}") ||
      error::exit "Failed to execute lsmod command"

    if echo "$mod_list" | grep -q isgx; then
      log::debug "${_cmd_prefix[*]} ${driver_cmd[*]} ${_cmd_postfix[*]}"
      driver=$("${_cmd_prefix[@]}" "${driver_cmd[@]}" "${_cmd_postfix[@]}") ||
        error::exit "Failed to execute driver command"
    else
      log::warn "No ISGX driver loaded on ${host}"
      driver="(none)"
    fi

    log::info "host=${host} bios vendor=${vendor} version=${version}\
     release=${release} driver=${driver}"
    echo "host=${host} bios vendor=${vendor} version=${version}\
     release=${release} driver=${driver}"
  done
fi
